//
// Generated file, do not edit! Created by nedtool 4.6 from Transport.msg.
//

#ifndef _TRANSPORT_M_H_
#define _TRANSPORT_M_H_

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0406
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>Transport.msg:5</tt> by nedtool.
 * <pre>
 * //
 * // Represents a packet in the network. Aplication layer packet
 * //
 * packet Transport
 * {
 *     unsigned int seq;
 *     unsigned short type;
 *     int srcAddr;
 *     int dstAddr;
 * }
 * </pre>
 */
class Transport : public ::cPacket
{
  protected:
    unsigned int seq_var;
    unsigned short type_var;
    int srcAddr_var;
    int dstAddr_var;

  private:
    void copy(const Transport& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const Transport&);

  public:
    Transport(const char *name=NULL, int kind=0);
    Transport(const Transport& other);
    virtual ~Transport();
    Transport& operator=(const Transport& other);
    virtual Transport *dup() const {return new Transport(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual unsigned int getSeq() const;
    virtual void setSeq(unsigned int seq);
    virtual unsigned short getType() const;
    virtual void setType(unsigned short type);
    virtual int getSrcAddr() const;
    virtual void setSrcAddr(int srcAddr);
    virtual int getDstAddr() const;
    virtual void setDstAddr(int dstAddr);
};

inline void doPacking(cCommBuffer *b, Transport& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, Transport& obj) {obj.parsimUnpack(b);}


#endif // ifndef _TRANSPORT_M_H_

